apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: admin-server
      name: admin-server
    spec:
      ports:
        - name: "9090"
          port: 9090
          targetPort: 9090
      selector:
        io.kompose.service: admin-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.service.expose: '{{ .Values.DNS_NAME }}'
        kompose.service.nodeport.port: "30001"
        kompose.service.type: nodeport
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
      name: api-gateway
    spec:
      ports:
        - name: "8080"
          nodePort: 30001
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: api-gateway
      type: NodePort
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: config-server
      name: config-server
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
      selector:
        io.kompose.service: config-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: customers-service
      name: customers-service
    spec:
      ports:
        - name: "8081"
          port: 8081
          targetPort: 8081
      selector:
        io.kompose.service: customers-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: discovery-server
      name: discovery-server
    spec:
      ports:
        - name: "8761"
          port: 8761
          targetPort: 8761
      selector:
        io.kompose.service: discovery-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana-server
      name: grafana-server
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: grafana-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: hystrix-dashboard
      name: hystrix-dashboard
    spec:
      ports:
        - name: "7979"
          port: 7979
          targetPort: 7979
      selector:
        io.kompose.service: hystrix-dashboard
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: prometheus-server
      name: prometheus-server
    spec:
      ports:
        - name: "9091"
          port: 9091
          targetPort: 9090
      selector:
        io.kompose.service: prometheus-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: tracing-server
      name: tracing-server
    spec:
      ports:
        - name: "9411"
          port: 9411
          targetPort: 9411
      selector:
        io.kompose.service: tracing-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: vets-service
      name: vets-service
    spec:
      ports:
        - name: "8083"
          port: 8083
          targetPort: 8083
      selector:
        io.kompose.service: vets-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: visits-service
      name: visits-service
    spec:
      ports:
        - name: "8082"
          port: 8082
          targetPort: 8082
      selector:
        io.kompose.service: visits-service
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: admin-server
      name: admin-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: admin-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: admin-server
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_ADMIN_SERVER }}'
              name: admin-server
              ports:
                - containerPort: 9090
              resources: {}
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.service.expose: '{{ .Values.DNS_NAME }}'
        kompose.service.nodeport.port: "30001"
        kompose.service.type: nodeport
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
      name: api-gateway
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api-gateway
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.service.expose: '{{ .Values.DNS_NAME }}'
            kompose.service.nodeport.port: "30001"
            kompose.service.type: nodeport
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: api-gateway
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_API_GATEWAY }}'
              name: api-gateway
              ports:
                - containerPort: 8080
              resources: {}
	  initContainers:
            - name: init-discovery-server
              image: busybox
              command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
              imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.service.expose: '{{ .Values.DNS_NAME }}'
        kompose.service.nodeport.port: "30001"
        kompose.service.type: nodeport
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: api-gateway
      name: api-gateway
    spec:
  ingressClassName: nginx
  rules:
    - host: '{{ .Values.DNS_NAME }}'
          http:
            paths:
              - backend:
                  service:
                    name: api-gateway
                    port:
                      number: 8080
                path: /
                pathType: Prefix
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: config-server
      name: config-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: config-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: config-server
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_CONFIG_SERVER }}'
              name: config-server
              ports:
                - containerPort: 8888
              resources: {}
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: customers-service
      name: customers-service
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: customers-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: customers-service
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_CUSTOMERS_SERVICE }}'
              name: customers-service
              ports:
                - containerPort: 8081
              resources: {}
	  initContainers:
            - name: init-discovery-server
              image: busybox
              command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: discovery-server
      name: discovery-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: discovery-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: discovery-server
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_DISCOVERY_SERVER }}'
              name: discovery-server
              ports:
                - containerPort: 8761
              resources: {}
	  initContainers:
            - name: init-config-server
              image: busybox
              command: ['sh', '-c', 'until nc -z config-server:8888; do echo waiting for config-server; sleep 2; done;']
              imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana-server
      name: grafana-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: grafana-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: grafana-server
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_GRAFANA_SERVICE }}'
              name: grafana-server
              ports:
                - containerPort: 3000
              resources: {}
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: hystrix-dashboard
      name: hystrix-dashboard
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: hystrix-dashboard
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: hystrix-dashboard
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_HYSTRIX_DASHBOARD }}'
              name: hystrix-dashboard
              ports:
                - containerPort: 7979
              resources: {}
	  initContainers:
      	    - name: init-discovery-server
              image: busybox
              command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: prometheus-server
      name: prometheus-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: prometheus-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: prometheus-server
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_PROMETHEUS_SERVICE }}'
              name: prometheus-server
              ports:
                - containerPort: 9090
              resources: {}
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: tracing-server
      name: tracing-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: tracing-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: tracing-server
        spec:
          containers:
            - env:
                - name: JAVA_OPTS
                  value: -XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
              image: openzipkin/zipkin
              name: tracing-server
              ports:
                - containerPort: 9411
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: vets-service
      name: vets-service
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: vets-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: vets-service
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_VETS_SERVICE }}'
              name: vets-service
              ports:
                - containerPort: 8083
              resources: {}
          initContainers:
             - name: init-discovery-server
               image: busybox
               command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
          imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
        kompose.image-pull-secret: regcred
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: visits-service
      name: visits-service
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: visits-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o petclinic_chart/templates
            kompose.image-pull-secret: regcred
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: visits-service
        spec:
          containers:
            - image: '{{ .Values.IMAGE_TAG_VISITS_SERVICE }}'
              name: visits-service
              ports:
                - containerPort: 8082
              resources: {}
	  initContainers:
            - name: init-discovery-server
              image: busybox
              command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
              imagePullSecrets:
            - name: regcred
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

